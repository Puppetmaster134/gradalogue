{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\Projects\\\\GradSite\\\\gradalogue\\\\pages\\\\search.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// This is the Link API\nimport { useRouter } from 'next/router';\nimport { useState } from 'react'; //Fetch\n\nimport fetch from 'isomorphic-unfetch'; //Flexbox\n\nimport { Grid, Row, Col } from 'react-flexbox-grid'; //Modals\n\nimport Popup from \"reactjs-popup\"; //Material UI Grid\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'; //Moment\n\nimport Moment from 'react-moment';\nimport 'moment-timezone'; //Custom Components\n\nimport Layout from '../components/Layout';\nimport SearchBar from '../components/searchbar/SearchBar';\nimport SearchButton from '../components/searchbar/SearchButton';\nexport default function Search(props) {\n  const router = useRouter();\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 650\n    },\n    tablecell: {\n      fontSize: '.6rem'\n    }\n  }));\n  const classes = useStyles();\n  const {\n    0: query,\n    1: setQuery\n  } = useState(props.url.query.query);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Search, you fucking cunt!\"))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(SearchBar, {\n    id: \"MainSearch\",\n    placeholder: \"Enter a University Name, Field of Study, or a Country\",\n    onChange: msg => {\n      setQuery(msg);\n    },\n    defaultValue: query,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(Col, {\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(SearchButton, {\n    for: \"MainSearch\",\n    callback: () => {\n      let route = \"/search?q=\".concat({\n        query\n      }.query);\n      Router.push({\n        pathname: '/search',\n        query: {\n          q: {\n            query\n          }.query\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Run Search!\"))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Table, {\n    className: classes.table,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Accepted\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Attending\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"University\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Program\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Degree\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"GRE\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Applied\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Decision\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Comments\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.searchResults.map(row => __jsx(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    className: classes.tablecell,\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, row.accepted ? \"Accepted\" : \"Rejected\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, row.accepted ? row.attending ? \"Attending\" : \"Not Attending\" : \"Rejected, Not Attending\"), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, row.universityName), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, row.program), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, row.degree), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, row.greVerbal, \"/\", row.greQuantitative, \"/\", row.greWriting), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Moment, {\n    format: \"MMM DD,YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, row.dateApplied)), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Moment, {\n    format: \"MMM DD,YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, row.dateDecision)), __jsx(TableCell, {\n    className: classes.tablecell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, row.comments)))))))));\n}\n\nSearch.getInitialProps = async function (context) {\n  let searchResults = [];\n  console.log('Server Call');\n\n  if (context.query) {\n    const {\n      q\n    } = context.query;\n    const queryBody = {\n      \"params\": {\n        \"text\": q\n      }\n    };\n    console.log('Query Body', q);\n    const res = await fetch(\"http://localhost:3000/api/search\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify(queryBody)\n    });\n    let {\n      searchResults\n    } = await res.json();\n    if (!searchResults) searchResults = [];\n  }\n\n  return {\n    searchResults\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Brian\\Documents\\Projects\\GradSite\\gradalogue\\pages\\search.js"],"names":["useRouter","useState","fetch","Grid","Row","Col","Popup","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Moment","Layout","SearchBar","SearchButton","Search","props","router","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","tablecell","fontSize","classes","query","setQuery","url","msg","route","Router","push","pathname","q","searchResults","map","row","name","accepted","attending","universityName","program","degree","greVerbal","greQuantitative","greWriting","dateApplied","dateDecision","comments","getInitialProps","context","console","log","queryBody","res","method","headers","body","json"],"mappings":"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","sourcesContent":["// This is the Link API\r\n\r\nimport {\r\n    useRouter\r\n} from 'next/router';\r\n\r\nimport {\r\n    useState\r\n} from 'react';\r\n\r\n\r\n//Fetch\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n//Flexbox\r\nimport { Grid, Row, Col } from 'react-flexbox-grid'\r\n\r\n//Modals\r\nimport Popup from \"reactjs-popup\";\r\n\r\n//Material UI Grid\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n//Moment\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\n//Custom Components\r\nimport Layout from '../components/Layout';\r\nimport SearchBar from '../components/searchbar/SearchBar'\r\nimport SearchButton from '../components/searchbar/SearchButton'\r\n\r\n\r\n\r\nexport default function Search(props) {\r\n  const router = useRouter();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 650\r\n    },\r\n    tablecell: {\r\n        fontSize: '.6rem'\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [query, setQuery] = useState(props.url.query.query);\r\n\r\n\r\n  return (\r\n      <Layout>\r\n          <Row>\r\n              <Col xs={12}>\r\n                  <h2>Search, you fucking cunt!</h2>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col xs={10}>\r\n                  <SearchBar\r\n                    id=\"MainSearch\"\r\n                    placeholder=\"Enter a University Name, Field of Study, or a Country\"\r\n                    onChange={(msg) =>\r\n                    {\r\n                        setQuery(msg)\r\n                    }}\r\n                    defaultValue={query}/>\r\n              </Col>\r\n              <Col xs={2}>\r\n                  <SearchButton\r\n                    for=\"MainSearch\"\r\n                    callback={() => {\r\n                        let route = `/search?q=${({query}).query}`;\r\n                        Router.push({\r\n                            pathname: '/search',\r\n                            query: { q: ({query}).query }\r\n                        })\r\n                    }}>\r\n                    Run Search!\r\n                </SearchButton>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12}>\r\n                <Paper className={classes.root}>\r\n                    <Table className={classes.table} size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell className={classes.tablecell} align=\"left\">Accepted</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">Attending</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">University</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">Program</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">Degree</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">GRE</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">Applied</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">Decision</TableCell>\r\n                        <TableCell className={classes.tablecell}  align=\"left\">Comments</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.searchResults.map(row => (\r\n                            <TableRow key={row.name}>\r\n                              <TableCell className={classes.tablecell}  component=\"th\" scope=\"row\">{row.accepted ? \"Accepted\" : \"Rejected\"}</TableCell>\r\n                              <TableCell className={classes.tablecell}  align=\"left\">{row.accepted ? (row.attending ? \"Attending\" : \"Not Attending\") : \"Rejected, Not Attending\"}</TableCell>\r\n                              <TableCell className={classes.tablecell}  align=\"left\">{row.universityName}</TableCell>\r\n                              <TableCell className={classes.tablecell} align=\"left\">{row.program}</TableCell>\r\n                              <TableCell className={classes.tablecell} align=\"left\">{row.degree}</TableCell>\r\n                              <TableCell className={classes.tablecell} align=\"left\">{row.greVerbal}/{row.greQuantitative}/{row.greWriting}</TableCell>\r\n                              <TableCell className={classes.tablecell} align=\"left\"><Moment format=\"MMM DD,YYYY\">{row.dateApplied}</Moment></TableCell>\r\n                              <TableCell className={classes.tablecell} align=\"left\"><Moment format=\"MMM DD,YYYY\">{row.dateDecision}</Moment></TableCell>\r\n                              <TableCell className={classes.tablecell} align=\"left\">{row.comments}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </Col>\r\n          </Row>\r\n      </Layout>\r\n  );\r\n}\r\n\r\n\r\nSearch.getInitialProps = async function(context) {\r\n    let searchResults = [];\r\n\r\n    console.log('Server Call');\r\n\r\n    if(context.query)\r\n    {\r\n        const { q } = context.query;\r\n\r\n        const queryBody = {\r\n            \"params\": {\r\n                \"text\": q\r\n            }\r\n        };\r\n\r\n        console.log('Query Body', q);\r\n\r\n\r\n        const res = await fetch(`http://localhost:3000/api/search`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(queryBody)\r\n        });\r\n\r\n\r\n\r\n        let {\r\n            searchResults\r\n        } = await res.json();\r\n\r\n\r\n        if(!searchResults)\r\n            searchResults = [];\r\n    }\r\n\r\n\r\n\r\n    return { searchResults };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}